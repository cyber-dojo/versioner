
How to run a local server incorporating changes to a local repo (eg in a branch).
--------------------------------------------------------------------------------

When you run
$ cyber-dojo up
it uses cyberdojo/versioner:latest to retrieve the image tags from /app/.env

For example:
$ docker run --rm cyberdojo/versioner:latest sh -c 'cat /app/.env' \
  | grep CYBER_DOJO_WEB_SHA
CYBER_DOJO_WEB_SHA=535ec8662e482fb38bef46a381ea3689e38e76c8

So the web service will be a container run from the image
cyberdojo/web:535ec86

If you have made local changes to your web/
repo and re-run web/sh/build_docker_images.sh you will
recreate cyberdojo/web:latest but the changes will _not_
be seen when you reissue:
$ cyber-dojo up

You need to ensure versioner/.env's entry for web is a web image
which includes changes to the web repo.

rebuild web image and tag it to a known 'fake' sha
-------------------------------------------------
$ cd web/
$ ./sh/build_docker_images.sh #Â [1]
$ export WEB_SHA=$(printf '9%.0s' {1..40})
$ docker tag cyberdojo/web:latest cyberdojo/web:${WEB_SHA:0:7} # [2]

rebuild image versioner:latest with web's fake sha
--------------------------------------------------
Appending will work as last setting 'wins'
$ cd versioner/
$ echo "CYBER_DOJO_WEB_SHA=${WEB_SHA}" >> .env
$ ./sh/build_docker_images.sh

bring the server up
-------------------
# cd commander/
$ unset COMMANDER_SHA
$ cyber-dojo up # [3]
...
Using web=cyberdojo/web:9999999
...


You need to repeat commands [1,2,3]
Docker is smart enough to see that although the web image tag has
not changed, it is nonetheless a new image:
$ ./cyber-dojo up
...
Recreating cyber-dojo-web ... done
