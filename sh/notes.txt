
Plan...
split custom (and exercises/languages) services into two services...
custom + custom-start-points
the former will become a sinatra web server offering custom choices in web page.
the latter will stay a rack json-server and is what can be overridden


At the moment .env looks like this...

CYBER_DOJO_STARTER_BASE_SHA=...
CYBER_DOJO_STARTER_BASE_TAG=...

CYBER_DOJO_CUSTOM_SHA=...
CYBER_DOJO_CUSTOM_TAG=...
CYBER_DOJO_EXERCISES_SHA=...
CYBER_DOJO_EXERCISES_TAG=...
CYBER_DOJO_LANGUAGES_SHA=...
CYBER_DOJO_LANGUAGES_TAG=...
- - - - - - - - - - - -
CYBER_DOJO_CUSTOM=...
CYBER_DOJO_EXERCISES=...
CYBER_DOJO_LANGUAGES=...


And there is no extraction of a sinatra-server from the start-points server.
commander's start-point-create.sh creates a Dockerfile like this...
  echo "FROM $(base_image_name)"
  echo "LABEL org.cyber-dojo.start-point=$(image_type)"
  echo "COPY . /app/repos"
  echo "RUN /app/src/from_script/check_all.rb /app/repos $(image_type)"
  echo "ENV ${env_vars}"
  echo "EXPOSE ${PORT}"
  echo 'CMD [ "./up.sh" ]'
Where base_image_name is
  cyberdojo/starter-base:STARTER_BASE_TAG
which is really
  cyberdojo/starter-base:CYBER_DOJO_STARTER_BASE_TAG

And this starter-base holds the start-point checker code
and the rack web-server code which serves json.
To use a created start-point image you need to do
  $ cyber-dojo up --custom=...
or override the CYBER_DOJO_CUSTOM env-var.

In the future...

start-points will still served by their own rack-server serving json
and custom (eg) will become a sinatra-server serving html
(although initially it can just proxy)

So...creating a start-point image will use...
  CYBER_DOJO_START_POINTS_CHECKER_BASE_SHA=...
  CYBER_DOJO_START_POINTS_CHECKER_BASE_TAG=...
which cannot be overridden, and will have a fixed image-name
And start-point-create.sh will look exactly the same but will
probably have a different PORT.

Overriding the custom start-point image in the up command will use...
  CYBER_DOJO_CUSTOM_START_POINTS_IMAGE=...
This leaves space for the general pattern of using
  CYBER_DOJO_CUSTOM_IMAGE=...
as a web/nginx like override.

Specifying the custom sinatra-server (not overridable) will use...
  CYBER_DOJO_CUSTOM_SHA=...
  CYBER_DOJO_CUSTOM_TAG=...
